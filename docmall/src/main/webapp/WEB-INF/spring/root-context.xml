<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- pom.xml의 dependency구문에 의하여 다운받은 라이브러리에 존재하는 클래스들을 이용하여 bean(객체)를 생성한 의미. -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- 
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		 -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="spring"></property>
		<property name="password" value="SPRING"></property>
	</bean>	
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- 데이타베이스 연결과 SQL구문 실행에 대한 모든기능을 가진 객체 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<!-- 트랜잭션 설정구문 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:annotation-driven/>
	
	<!-- com.demo.mapper 패키지에 존재하는 Interface를 Mapper Interface로 만들어주는 설정구문. -->
	<mybatis-spring:scan base-package="com.docmall.mapper"/>
	
	
	
	<!-- 메일기능 관련설정 -->
	<!-- https://myaccount.google.com/security?rapt=AEjHL4OdkuzyEZ7kVBfl7IjImC8vCQOvguwootB5OVe6lT5TDHpILM5DO4vkNzw5y1RIQtWr_0s09Tz1gwq2JxhmNX6GQsCVRQ
 메일인증방식 변경됨. 앱비밀번호. 암호화키 사용. -->
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	  <property name="host" value="smtp.gmail.com" />
	  <property name="port" value="587" />
	  <property name="username" value="메일주소" />
	<property name="password" value="인증키" />
	  <property name="javaMailProperties">
	  <props>
	    <prop key="mail.smtp.auth">true</prop>
	    <!-- 윈도우즈 운영체제 11버전(클라이언트)에 따라 TLS변환문제가 발생이 되는 듯 추측함. 
	    <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
		<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
		 -->
	    <prop key="mail.smtp.starttls.enable">true</prop>
	  </props>
	  </property>
	</bean>
	
	<!-- 
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.naver.com" />
	<property name="port" value="465" />
	<property name="username" value="doccomsa69@gmail.com" />
	<property name="password" value="yzortywakubgqpnp" />
	<property name="defaultEncoding" value="utf-8" />
	<property name="javaMailProperties">
		<props>
			<prop key="mail.debug">true</prop>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
			<prop key="mail.smtp.auth">true</prop>
			<prop key="mail.smtps.ssl.trust">*</prop>
			<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
		</props>
	</property>
	</bean>
	 -->
	
	<!-- AOP관련 설정 -->
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.docmall.aop" />
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- <context:component-scan base-package="com.demo.dao" />  -->
	<context:component-scan base-package="com.docmall.service" />
	
	
</beans>

